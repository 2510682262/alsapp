<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.alsapp.dao.AShopMapper">
  <resultMap id="BaseResultMap" type="com.qfedu.alsapp.entity.AShop">
    <id column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="shop_goods_id" jdbcType="INTEGER" property="shopGoodsId" />
    <result column="shop_num" jdbcType="INTEGER" property="shopNum" />
    <result column="shop_price" jdbcType="DOUBLE" property="shopPrice" />
    <result column="shop_flag" jdbcType="INTEGER" property="shopFlag" />
    <result column="shop_user_id" jdbcType="INTEGER" property="shopUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    shop_id, shop_goods_id, shop_num, shop_price, shop_flag, shop_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from a_shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from a_shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qfedu.alsapp.entity.AShop">
    insert into a_shop (shop_id, shop_goods_id, shop_num, 
      shop_price, shop_flag, shop_user_id
      )
    values (#{shopId,jdbcType=INTEGER}, #{shopGoodsId,jdbcType=INTEGER}, #{shopNum,jdbcType=INTEGER}, 
      #{shopPrice,jdbcType=DOUBLE}, #{shopFlag,jdbcType=INTEGER}, #{shopUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qfedu.alsapp.entity.AShop">
    insert into a_shop
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="shopGoodsId != null">
        shop_goods_id,
      </if>
      <if test="shopNum != null">
        shop_num,
      </if>
      <if test="shopPrice != null">
        shop_price,
      </if>
      <if test="shopFlag != null">
        shop_flag,
      </if>
      <if test="shopUserId != null">
        shop_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopId != null">
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="shopGoodsId != null">
        #{shopGoodsId,jdbcType=INTEGER},
      </if>
      <if test="shopNum != null">
        #{shopNum,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopFlag != null">
        #{shopFlag,jdbcType=INTEGER},
      </if>
      <if test="shopUserId != null">
        #{shopUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qfedu.alsapp.entity.AShop">
    update a_shop
    <set>
      <if test="shopGoodsId != null">
        shop_goods_id = #{shopGoodsId,jdbcType=INTEGER},
      </if>
      <if test="shopNum != null">
        shop_num = #{shopNum,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        shop_price = #{shopPrice,jdbcType=DOUBLE},
      </if>
      <if test="shopFlag != null">
        shop_flag = #{shopFlag,jdbcType=INTEGER},
      </if>
      <if test="shopUserId != null">
        shop_user_id = #{shopUserId,jdbcType=INTEGER},
      </if>
    </set>
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qfedu.alsapp.entity.AShop">
    update a_shop
    set shop_goods_id = #{shopGoodsId,jdbcType=INTEGER},
      shop_num = #{shopNum,jdbcType=INTEGER},
      shop_price = #{shopPrice,jdbcType=DOUBLE},
      shop_flag = #{shopFlag,jdbcType=INTEGER},
      shop_user_id = #{shopUserId,jdbcType=INTEGER}
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>

  <select id="selectByUserId" resultType="com.qfedu.alsapp.common.vo.ShopVo">
    select * from a_shop s
    INNER JOIN a_goods g
    on s.shop_goods_id = g.goods_id
    where s.shop_user_id = #{id}
  </select>
</mapper>